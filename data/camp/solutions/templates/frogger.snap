snapshot {
    stage:Stage {
        @anything
    }
    customBlock:`Move Frogger` {
        script {
            doForever(script {
                @anyOrder {
                    doIf(reportKeyPressed(literal:`up arrow`), script {
                        setHeading(literal:0)
                        hop
                    })
                    doIf(reportKeyPressed(literal:`down arrow`), script {
                        setHeading(literal:180)
                        hop
                    })
                    doIf(reportKeyPressed(literal:`right arrow`), script {
                        setHeading(literal:90)
                        hop
                    })
                    doIf(reportKeyPressed(literal:`left arrow`), script {
                        setHeading(literal:270)
                        hop
                    })
                }
                @anyOrder {
                    doIf(reportLessThan(xPosition, literal:-240), script {
                        setXPosition(literal:-240)
                    })
                    doIf(reportLessThan(literal:240, xPosition), script {
                        setXPosition(literal:240)
                    })
                    doIf(reportLessThan(yPosition, literal:-180), script {
                        setYPosition(literal:-180)
                    })
                    doIf(reportLessThan(literal:180, yPosition), script {
                        setYPosition(literal:180)
                    })
                }
            })
        }
    }
    customBlock:`Move Car %s` {
        script {
            doForever(script {
                changeXPosition(var:speed)
                @anyOrder {
                    doIf(reportLessThan(xPosition, literal:-240), script {
                        setXPosition(literal:240)
                    })
                    doIf(reportLessThan(literal:240, xPosition), script {
                        setXPosition(literal:-240)
                    })
                }
                doIf(reportTouchingObject(literal:Frogger), script {
                    gameover
                })
            })
        }
        varDec:speed
    }
    customBlock:`Move Platform %s` {
        script {
            doForever(script {
                changeXPosition(var:speed)
                @anyOrder {
                    doIf(reportLessThan(literal:321, xPosition), script {
                        setXPosition(literal:-320)
                    })
                    doIf(reportLessThan(xPosition, literal:-321), script {
                        setXPosition(literal:320)
                    })
                }
                doIf(reportTouchingObject(literal:Frogger), script {
                    doSetVar(varMenu:`platform move`, var:speed)
                })
            })
        }
        varDec:speed
    }
    customBlock:`Turtle Swim` {
        script {
            doForever(script {
                doIf(reportTouchingObject(literal:Frogger), script {
                    @defBlock TIME {
                        @or {
                            literal,
                            reportRandom(literal, literal)
                        }
                    }
                    wait_gametime(literal)
                    doWearNextCostume
                    wait_gametime(literal)
                    doWearNextCostume
                    wait_gametime(@block TIME)
                    doWearNextCostume
                })
            })
        }
    }
    customBlock:`Lily Pad` {
        script {
            doDeclareVariables(list(varMenu:hasFrog))
            @anyOrder {
                doSwitchToCostume(literal:`empty lily`)
                doSetVar(varMenu:Score, literal:0)
                doSetVar(varMenu:hasFrog, literal:no)
            }
            doForever(script {
                @defBlock RESET {
                    @anyOrder {
                        doSwitchToCostume(literal:`lily + frog`)
                        doSetVar(varMenu:hasFrog, literal:yes)
                        doChangeVar(varMenu:Score, literal:1)
                        resetfrogger
                    }
                }
                @defBlock NO_FROG {
                    @or {
                        reportEquals(literal:no, var:hasFrog),
                        reportNot(reportEquals(literal, var))
                    }
                }
                @or {
                    doIf(reportTouchingObject(literal:Frogger), script {
                        doIf(@block NO_FROG, script {
                            @block RESET
                        })
                    }),
                    doIf(@block NO_FROG, script {
                        doIf(reportTouchingObject(literal:Frogger), script {
                            @block RESET
                        })
                    }),
                    doIf(reportAnd(
                            @anyOrder {
                                @block NO_FROG,
                                reportTouchingObject(literal:Frogger)
                            }
                        ), script {
                            @block RESET
                        }
                    )
                }

            })
        }
    }
    varDec:`platform move`
    varDec:platforms
    varDec:Score
    varDec:Difficulty
}
