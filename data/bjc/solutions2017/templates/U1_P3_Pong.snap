snapshot {
    @defVar (STAGE, START, SCORE, PADDLES) {
        @defVar (FOREVER) {
            stage {
                @defBlock PADDLE {
                    sprite {
                        script {
                            receiveGo
                            @anyOrder {
                                @optional { setScale(literal) }
                                gotoXY(literal, literal)
                            }
                            @if (FOREVER) {
                                doForever(script {
                                    doIf(reportAnd(reportKeyPressed(literal), reportLessThan(yPosition, literal)), script {
                                        changeYPosition(literal)
                                    })
                                    doIf(reportAnd(reportKeyPressed(literal), reportLessThan(literal, yPosition)), script {
                                        changeYPosition(literal)
                                    })
                                })
                            }
                        }
                        @unless (FOREVER) {
                            script {
                                receiveKey
                                doIf(reportLessThan(yPosition, literal), script {
                                    changeYPosition(literal)
                                })
                            }
                            script {
                                receiveKey
                                doIf(reportLessThan(literal, yPosition), script {
                                    changeYPosition(literal)
                                })
                            }
                        }
                    }
                }
                @block PADDLE
                sprite {
                    script {
                        receiveGo
                        @anyOrder {
                            @unless (STAGE, START) { doSetVar(literal, literal) }
                            @optional { setScale(literal) }
                            gotoXY(literal, literal)
                            setHeading(@anything)
                        }
                        doForever(script {
                            @unless (STAGE, START) {
                                doIf(reportAnd(reportLessThan(literal, xPosition), reportTouchingObject(literal)), script {
                                    doChangeVar(literal, literal)
                                })
                            }
                            bounceOffEdge
                            forward(literal)
                        })
                    }
                    @defVar DIFF {
                        script {
                            receiveCondition(reportTouchingObject(literal))
                            setHeading(
                                @if (DIFF) { reportProduct(direction, literal) }
                                @unless (DIFF) { reportDifference(literal, direction) }
                            )
                            @unless (STAGE, START) { doChangeVar(literal, literal) }
                        }
                        @if (STAGE, PADDLES) {
                            script {
                                receiveCondition(reportTouchingObject(literal))
                                setHeading(
                                    @if (DIFF) { reportProduct(direction, literal) }
                                    @unless (DIFF) { reportDifference(literal, direction) }
                                )
                            }
                        }
                    }
                }
                @if (STAGE, PADDLES) {
                    @block PADDLE
                }
            }
            @unless (STAGE, START) { var }
        }
    }
}