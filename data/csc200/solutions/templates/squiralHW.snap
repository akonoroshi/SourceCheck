snapshot {
    @defHint TEST {
        :`Don't forget to test your code once you've made your "draw squiral" block.` You can do this by finding the block, dragging it to the main code area and left clicking on it once.
    }
    @defHint PEN_DOWN {
        :`Using the "pen down" block (under Pen) makes the sprite draw a trail behind it when it moves, which should happen before you draw the Squiral.`
    }
    @defHint PEN_UP {
        :`Using the "pen up" block (under Pen) makes the sprite stop drawing a trail behind it when it moves, which should happen after you draw the Squiral.`
    }
    @defHint REPEAT_OUTER {
        :`The "repeat" block (under Control) allows you to run the same code a fixed number of times, like drawing each full rotation of the Squiral.`
    }
    @defHint TURN {
        :`The "turn __ degrees" block (under Motion) makes the sprite turn some degrees, like at each corner of the Squiral.`
    }
    @defHint CUSTOM_BLOCK {
        :`You should create a new block called "draw squiral" and put your code there. You can do this by clicking the "Make a block" button on the bottom-left of the screen.`
    }
    @defHint LENGTH_VAR {
        :`Starting from the center, each side of the Squiral will get longer, so you will need a variable to hold the length as the sprite draws each side.`
    }
    @defHint SET_LENGTH {
        :`Starting from the center, the first side of the Squiral is always the same (short) length, so you should set your length variable before you draw.`
    }
    @defHint MOVE_AND_TURN {
        :`Each time your code repeats, your sprite should draw one side of the Sqruial and turn.`
    }
    @defHint INCREMENT_LENGTH {
        :`Each time your sprite draws a side of the Squiral, the next side should be longer, so use the "change __ by __" block (Variables) to increase the length.`
    }
    @defHint INPUT_ROTATIONS {
        :`The "draw squiral" block should have an input for the number of rotations to draw.`
        priority(2)
    }
    @defHint TIMES {
        :`If a squiral should have 5 rotations, it should have "5 * 4 = 20" sides.`
        priority(1)
    }

    @defVar (VAR, GLOBAL, LOCAL, ARG) {
        @defBlock SQUIRAL {
            @anyOrder {
                @if (VAR, LOCAL) {
                    @hint LENGTH_VAR
                    doDeclareVariables(list(varMenu:length))
                }
                @hint PEN_DOWN
                down
                @hint SET_LENGTH
                doSetVar(@hint SET_LENGTH varMenu:length, literal)
            }
            @defVar (LOOP, TIMES, NESTED) {
                @defBlock BODY {
                    @anyOrder {
                        @hint MOVE_AND_TURN {
                            forward(@hint LENGTH_VAR var:length)
                            @or {
                                turn(literal:90)
                                turnLeft(literal:90)
                            }
                        }
                        @hint INCREMENT_LENGTH {
                            @or {
                                doChangeVar(@hint INCREMENT_LENGTH varMenu:length, literal)
                                doSetVar(@hint INCREMENT_LENGTH varMenu:length, reportSum(literal, var:length))
                            }
                        }
                    }
                }
                @if (LOOP, TIMES) {
                    @hint REPEAT_OUTER
                    doRepeat(@hint TIMES reportProduct(literal:4, @hint INPUT_ROTATIONS var:rotations), script {
                        @block BODY
                    })
                }
                @if (LOOP, NESTED) {
                    @defVar (OUTER, VAR, LIT) {
                        @hint REPEAT_OUTER
                        doRepeat(@if (OUTER, VAR) { @hint INPUT_ROTATIONS var:rotations } @if (OUTER, LIT) { literal:4 }, script {
                            @hint TIMES
                            doRepeat(@if (OUTER, LIT) { @hint INPUT_ROTATIONS var:rotations } @if (OUTER, VAR) { literal:4 }, script {
                                @block BODY
                            })
                        })
                    }
                }
            }
            @hint PEN_UP
            up
        }
        @defVar (CUSTOM) {
            stage {
                sprite {
                    @defBlock HEADER {
                        @anyOrder {
                            @+optional { receiveGo }
                            @+optional { clear }
                            @+optional { gotoXY }
                            @+optional { down }
                        }
                    }
                    @hint TEST
                    script {
                        @block HEADER
                        @if (CUSTOM) {
                            @hint TEST
                            evaluateCustomBlock:squiral
                        } @unless (CUSTOM) {
                            @block SQUIRAL
                        }
                    }
                }
            }
            customBlock:squiral {
                script {
                    @if (CUSTOM) {
                        @block SQUIRAL
                    }
                }
                @if (CUSTOM) {
                    @hint INPUT_ROTATIONS
                    varDec:rotations
                    @if (VAR, ARG) { @hint LENGTH_VAR varDec:length }
                }
            }
        }
        @if (VAR, GLOBAL) {
            @hint LENGTH_VAR
            varDec:length
        }
    }
}
