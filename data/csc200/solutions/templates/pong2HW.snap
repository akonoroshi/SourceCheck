snapshot {
    stage {
        sprite {
            @defVar(FOREVER_KEYS) {
                script {
                    receiveGo
                    setScale(literal)
                    gotoXY(literal, literal)
                    @if (FOREVER_KEYS) {
                        doForever(script {
                            @defVar(Y_FIRST) {
                                doIf(reportAnd(reportKeyPressed(literal), reportLessThan(
                                    @if(Y_FIRST) { yPosition, literal }
                                    @unless(Y_FIRST) { literal, yPosition }
                                )), script {
                                    changeYPosition(literal)
                                })
                                doIf(reportAnd(reportKeyPressed(literal), reportLessThan(
                                    @if(Y_FIRST) { literal, yPosition }
                                    @unless(Y_FIRST) { yPosition, literal }
                                )), script {
                                    changeYPosition(literal)
                                })
                            }
                        })
                    }
                }
                @unless (FOREVER_KEYS) {
                    script {
                        receiveKey
                        doIf(reportLessThan(yPosition, literal), script {
                            changeYPosition(literal)
                        })
                    }
                    script {
                        receiveKey
                        doIf(reportLessThan(literal, yPosition), script {
                            changeYPosition(literal)
                        })
                    }
                }
            }
        }
        sprite {
            script {
                receiveGo
                @anyOrder {
                    doSetVar(varMenu:rightPoints, literal)
                    doSetVar(varMenu:leftPoints, literal)
                    setScale(literal)
                    evaluateCustomBlock:resetBall
                }
            }
            script {
                receiveKey(literal)
                @optional { setHeading(@anything) }
                doForever(script {
                    @anyOrder {
                        forward(literal)
                        @or {
                            @repeat(2) {
                                doIf (reportTouchingObject(literal), script {
                                    setHeading(reportDifference(literal, direction))
                                })
                            }
                            doIf (reportOr(reportTouchingObject(literal), reportTouchingObject(literal)), script {
                                setHeading(reportDifference(literal, direction))
                            })
                        }
                        doIf(@or {
                            reportLessThan(literal, xPosition)
                            reportAnd(reportLessThan(literal, xPosition), reportTouchingObject(literal))
                        }, script {
                            doChangeVar(varMenu:leftPoints, literal)
                            evaluateCustomBlock:resetBall
                        })
                        doIf(@or {
                            reportLessThan(xPosition, literal)
                            reportAnd(reportLessThan(xPosition, literal), reportTouchingObject(literal))
                        }, script {
                            doChangeVar(varMenu:rightPoints, literal)
                            evaluateCustomBlock:resetBall
                        })
                    }
                    bounceOffEdge
                })
            }
        }
        sprite {
            script {
                receiveGo
                setScale(literal)
                gotoXY(literal, literal)
                doForever(script {
                    @or {
                        @inline {
                            doIf(reportLessThan(reportMouseY, yPosition), script {
                                changeYPosition(literal)
                            })
                            doIf(reportLessThan(yPosition, reportMouseY), script {
                                changeYPosition(literal)
                            })
                        }
                        setYPosition(reportMouseY)
                    }
                })
            }
        }
    }
    customBlock:resetBall {
        script {
            gotoXY(literal, literal)
            setHeading(reportRandom(literal, literal))
            doStopThis(literal)
        }
    }
    varDec:rightPoints
    varDec:leftPoints
}