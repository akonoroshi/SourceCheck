snapshot {
    @defHint PEN_DOWN {
        :`Using the "pen down" block (under Pen) makes the sprite draw a trail behind it when it moves, which should happen before you draw a polygon.`
    }
    @defHint REPEAT {
        :`The "repeat" block (under Control) allows you to run the same code a fixed number of times, like drawing each side of a polygon.`
    }
    @defHint MOVE {
        :`The "move __ steps" block (under Motion) makes the sprite move forward some amount, like at each side of a polygon.`
    }
    @defHint TURN {
        :`The "turn __ degrees" block (under Motion) makes the sprite turn some degrees, like at each corner of a polygon.`
    }
    @defHint TURN_AMOUNT1 {
        :`The amount the sprite should turn after drawing each side is related to the number of sides.`
        priority(1)
    }
    @defHint TURN_AMOUNT2 {
        :`For a triangle (3 sides), the sprite should turn 120 degrees after each side. For a square (4 sides), it should be 90 degrees.`
        priority(2)
    }
    @defHint ASK {
        :`The "ask __ and wait" block (under Sensing) asks the user a question, like how many sides the polygon should have, and stores their response in the "answer" block (under Sensing).`
        priority(2)
    }
    @defHint SIDES {
        :`The "answer" block (under Sensing) should store how many sides the sprite should draw (in the "repeat" block), which also affects how much the sprite should turn after drawing each side.`
        priority(1)
    }
    stage:Stage {
        sprite:Sprite {
            script {
                @+optional { receiveGo }
                @anyOrder {
                    @+optional { clear }
                    @+optional { setHeading(literal:90) }
                    @+optional { gotoXY(literal:0, literal:0) }
                    @hint ASK
                    doAsk(literal:`How many sides`)
                    @hint PEN_DOWN
                    down
                }
                @hint REPEAT
                doRepeat(@hint ASK @hint SIDES getLastAnswer, script {
                    @defBlock DEGREES {
                        @hint TURN_AMOUNT1 @hint TURN_AMOUNT2
                        reportQuotient(literal:360,
                            @hint SIDES
                            getLastAnswer
                        )
                    }
                    @anyOrder {
                        @hint MOVE
                        forward(literal:50)
                        @or {
                            @hint TURN
                            turn(@block DEGREES)
                            @hint TURN
                            turnLeft(@block DEGREES)
                        }
                    }
                })
                @+optional { up }
            }
        }
    }
}